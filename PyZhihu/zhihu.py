# coding = utf-8
import base64
import hmac
import json
import sys
import time
from hashlib import sha1

import bs4
import execjs
import requests
from PyQt5.QtCore import *
from PyQt5.QtGui import *
from PyQt5.QtWidgets import *

from PyZhihu.login import Ui_dlg_login


class ZhihuCaptcha(QThread):
    # 校验码信号（发送校验码图像）
    sign_need_captcha = pyqtSignal(str, bytes)

    # 校验码服务url，后面的lang表示用户是英文用户，校验码会返回英文数字校验
    url_captcha='https://www.zhihu.com/api/v3/oauth/captcha?lang=en'
    headers = {
        'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0.3 Safari/605.1.15'
    }

    def __init__(self):
        super(ZhihuCaptcha,self).__init__()
        # 发起校验码查询请求- 第一次请求（是否需要校验码）
        self.session = requests.Session()
        # 设置HTTP请求头:User-Agent
        self.session.headers = self.headers

    def run(self):
        response_1st = self.session.request(
            method='get',
            url=self.url_captcha)
        # 返回的数据大致这个格式，可以使用抓包工具与浏览器分析处这个数据格式
        # {
        #     "show_captcha": false
        # }
        is_captcha = json.loads(response_1st.content.decode())['show_captcha']
        # 如果需要检验码，则需要下载校验码，并校验
        if is_captcha:
            print('这次登录需要校验码！')
            # 下载校验码（使用的是put请求方法，可以从浏览器或者抓包工具分析出来）
            # 第二次请求：下载校验码（png格式的图像,数据样例见下面注释:图像内容是压缩的字节序列）
            # {
            #     "img_base64": "R0lGODdhkAFYAIcAAPn5+VVVVejo6NfX14aGhpeXl2NjY8XFxXR0dKioqLm5uWtra7Ozs8vLy3x8\nfOHh4aKiooyMjN3d3Z2dnZCQkK+vr9DQ0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAAAAkAFYAEAI/wABCBxI\nsKDBgwgTKlzIsKHDhxAjSpxIsaLFixgzatzIsaPHjyBDihxJsqTJkyhTqlzJsqXLlzBTCigQoGbN\nAwByAjgQoGfPBA8eFAhAlKgDBg0EAFjKtKnTp1CjSp1KtarVq1izat36NEKAr2ARABhLdqwABwHS\n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\nkidTrmz5MubHAQEAOw==\n"
            # }
            response_2nd = self.session.put(self.url_captcha)
            # 得到Base_64加密的图像
            img_base64 = json.loads(response_2nd.content.decode())['img_base64']
            # 解密图像
            img_bytes = base64.b64decode(img_base64)
            # 保存或者显示图像
            self.sign_need_captcha.emit('captcha', img_bytes)
            # 校验校验码

        else:
            # 不需要校验码，不需要任何，处理，下面直接使用用户信息登录
            print('这次登录，不需要校验码校验！')
            self.sign_need_captcha.emit('no captcha', b'')
        print('校验码线程结束')

    # 第三次请求：校验校验码
    def login_rquest(self, captcha_code, username, password):
        #
        data = {
            'input_text': captcha_code
        }
        print(data)
        res_captcha = self.session.post(self.url_captcha, data)
        print(res_captcha.content.decode())
        # 201 响应码表示已经接收请求，还需要继续处理
        # 请求已经被实现，而且有一个新的资源已经依据请求的需要而建立，
        # 且其 URI 已经随Location 头信息返回。
        # 假如需要的资源无法及时建立的话，应当返回 '202 Accepted'。
        if res_captcha.status_code == 201:
            captcha_ok = json.loads(res_captcha.content.decode())['success']
            if not captcha_ok:
                print("校验码失败")
                return 'captcha_err'
            else:
                print("校验码通过")
                # 开始登录
                timestamp = str(int(time.time() * 1000))
                signature = self.get_signature(timestamp)
                encrypt = self.get_encrypt(username, password, timestamp, signature, captcha_code)
                print(encrypt)
                data = encrypt
                login_headers = {
                    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0.1 Safari/605.1.15',
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'x-zse-83': '3_1.1'}
                url_login = 'https://www.zhihu.com/api/v3/oauth/sign_in'
                res_login = self.session.post(url_login, data=data, headers=login_headers)
                print(res_login.status_code, res_login.content.decode())
                if 200 <= res_login.status_code < 300:
                    print('登录成功！')
                    # 爬取主页内容
                    url_home = 'https://www.zhihu.com'
                    res_home = self.session.post(url_home)
                    content_home = res_home.content.decode('utf-8')
                    # 解析
                    bs_content = bs4.BeautifulSoup(content_home, 'html.parser')
                    list_topics = bs_content.find_all('div', attrs={
                        "class": "ContentItem AnswerItem",
                    })
                    print()
                    print(len(list_topics))
                    if len(list_topics) > 0:
                        # 第一条
                        topic = list_topics[0].get('data-zop')
                        json_topic = json.loads(topic)
                        print(json_topic['title'])
                    return json_topic['title']

    # 签名函数
    def get_signature(self, now_):
        # 签名由clientId,grantType,source,timestamp四个参数生成
        h = hmac.new(
            key='d1b964811afb40118a12068ff74a12f4'.encode('utf-8'),
            digestmod=sha1)
        grant_type = 'password'
        client_id = 'c3cef7c66a1843f8b3a9e6a1e3160e20'
        source = 'com.zhihu.web'
        now = now_
        h.update((grant_type + client_id + source + now).encode('utf-8'))
        return h.hexdigest()

    # 提交信息加密函数
    def get_encrypt(self, username, password, timestamp, signature, captcha):
        str_login = ""
        str_login += "client_id=c3cef7c66a1843f8b3a9e6a1e3160e20&"
        str_login += "grant_type=password&"
        str_login += F"timestamp={timestamp}&"
        str_login += "source=com.zhihu.web"
        str_login += F"&signature={signature}&"
        str_login += F"username={username}&"
        str_login += F"password={password}&"
        str_login += F"captcha={captcha}&"
        str_login += "lang=en&"
        str_login += "ref_source=homepage&"
        str_login += "utm_source="

        with open('p05_custom_atob.js', 'r') as fd:
            js_zhihu = fd.read()

        ctx = execjs.compile(js_zhihu)
        encrypt_ = ctx.call('Q', str_login)
        return encrypt_


# 校验码窗体
class LoginDialog(QDialog):

    # 初始化窗体
    def __init__(self, parent=None):
        super().__init__()
        self.th = ZhihuCaptcha()

        self.ui = Ui_dlg_login()
        self.setGeometry(100, 100, 400, 300)
        self.setWindowTitle('用户登录')
        self.ui.setupUi(self)

        self.ui.edt_username.setText('你的电话')
        self.ui.edt_password.setText('密码')

        # 处理信号
        self.th.sign_need_captcha.connect(self.query_captcha)

        self.th.start()
        self.show()

    def query_captcha(self, status, img_bytes):
        if status == 'no captcha':
            # 显示校验码提示
            self.ui.lbl_captcha.setText('不需要验证码')
            self.ui.lbl_captcha.setVisible(True)
        if status == 'captcha':
            # 显示校验码
            img_captcha = QImage.fromData(img_bytes)
            pix_captcha = QPixmap.fromImage(img_captcha)
            self.ui.lbl_captcha.setPixmap(pix_captcha)
            self.ui.lbl_captcha.setScaledContents(True)
            self.ui.lbl_captcha.setVisible(True)
            self.ui.edt_captcha.setVisible(True)

    def login(self):
        # 调用登录函数（登录失败会返回信号）
        re_login = self.th.login_rquest(
            self.ui.edt_captcha.text(),
            self.ui.edt_username.text(),
            self.ui.edt_password.text())
        self.setWindowTitle(re_login)


app = QApplication(sys.argv)

ui_login = LoginDialog()

sys.exit(app.exec())

